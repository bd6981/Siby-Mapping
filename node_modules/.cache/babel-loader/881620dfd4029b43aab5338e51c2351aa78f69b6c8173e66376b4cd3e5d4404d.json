{"ast":null,"code":"var _jsxFileName = \"/Users/britt/projects/mapping/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport useSwr from \"swr\";\nimport GoogleMapReact from \"google-map-react\";\nimport useSupercluster from \"use-supercluster\";\nimport \"./App.css\";\nimport crimes from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetcher = function () {\n  return fetch(...arguments).then(response => response.json());\n};\nconst Marker = _ref => {\n  let {\n    children\n  } = _ref;\n  return children;\n};\n_c = Marker;\nexport default function App() {\n  _s();\n  const mapRef = useRef();\n  const [bounds, setBounds] = useState(null);\n  const [zoom, setZoom] = useState(10);\n  const crime = \"./data.json\";\n  const {\n    data,\n    error\n  } = useSwr(crimes, {\n    fetcher\n  });\n  const crimes = data && !error ? data.slice(0, 2000) : [];\n  const points = crimes.map(crime => ({\n    type: \"Feature\",\n    properties: {\n      cluster: false,\n      crimeId: crime.id,\n      crimeTitle: crime.title,\n      crimeDate: crime.date,\n      crimeDay: crime.day,\n      crimeTime: crime.time,\n      crimeBeat: crime.beat,\n      crimeZone: crime.zone,\n      crimeLocation: crime.location,\n      crimeIBR: crime.ibr,\n      crimeOsDate: crime.osdate,\n      crimeOsTime: crime.ostime,\n      crimeNeighborhood: crime.neighborhood\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [parseFloat(crime.location.longitude), parseFloat(crime.location.latitude)]\n    }\n  }));\n  const {\n    clusters,\n    supercluster\n  } = useSupercluster({\n    points,\n    bounds,\n    zoom,\n    options: {\n      radius: 75,\n      maxZoom: 20\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: \"AIzaSyD2zMgWcSv5eO8fjUWF4b_hcbT6DPKc--A\"\n      },\n      defaultCenter: {\n        lat: 52.6376,\n        lng: -1.135171\n      },\n      defaultZoom: 10,\n      yesIWantToUseGoogleMapApiInternals: true,\n      onGoogleApiLoaded: _ref2 => {\n        let {\n          map\n        } = _ref2;\n        mapRef.current = map;\n      },\n      onChange: _ref3 => {\n        let {\n          zoom,\n          bounds\n        } = _ref3;\n        setZoom(zoom);\n        setBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\n      },\n      children: clusters.map(cluster => {\n        const [longitude, latitude] = cluster.geometry.coordinates;\n        const {\n          cluster: isCluster,\n          point_count: pointCount\n        } = cluster.properties;\n        if (isCluster) {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            lat: latitude,\n            lng: longitude,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cluster-marker\",\n              style: {\n                width: `${10 + pointCount / points.length * 20}px`,\n                height: `${10 + pointCount / points.length * 20}px`\n              },\n              onClick: () => {\n                const expansionZoom = Math.min(supercluster.getClusterExpansionZoom(cluster.id), 20);\n                mapRef.current.setZoom(expansionZoom);\n                mapRef.current.panTo({\n                  lat: latitude,\n                  lng: longitude\n                });\n              },\n              children: pointCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, `cluster-${cluster.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          lat: latitude,\n          lng: longitude,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"crime-marker\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/custody.svg\",\n              alt: \"crime doesn't pay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, `crime-${cluster.properties.crimeId}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Rx5wWbebKeu8LldeW0CyJPQxbX8=\", false, function () {\n  return [useSwr, useSupercluster];\n});\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Marker\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useRef","useSwr","GoogleMapReact","useSupercluster","crimes","fetcher","fetch","then","response","json","Marker","children","App","mapRef","bounds","setBounds","zoom","setZoom","crime","data","error","slice","points","map","type","properties","cluster","crimeId","id","crimeTitle","title","crimeDate","date","crimeDay","day","crimeTime","time","crimeBeat","beat","crimeZone","zone","crimeLocation","location","crimeIBR","ibr","crimeOsDate","osdate","crimeOsTime","ostime","crimeNeighborhood","neighborhood","geometry","coordinates","parseFloat","longitude","latitude","clusters","supercluster","options","radius","maxZoom","height","width","key","lat","lng","current","nw","se","isCluster","point_count","pointCount","length","expansionZoom","Math","min","getClusterExpansionZoom","panTo"],"sources":["/Users/britt/projects/mapping/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport useSwr from \"swr\";\nimport GoogleMapReact from \"google-map-react\";\nimport useSupercluster from \"use-supercluster\";\nimport \"./App.css\";\nimport crimes from \"./data.json\";\n\nconst fetcher = (...args) => fetch(...args).then((response) => response.json());\n\nconst Marker = ({ children }) => children;\n\nexport default function App() {\n  const mapRef = useRef();\n  const [bounds, setBounds] = useState(null);\n  const [zoom, setZoom] = useState(10);\n\n  const crime = \"./data.json\";\n  const { data, error } = useSwr(crimes, { fetcher });\n  const crimes = data && !error ? data.slice(0, 2000) : [];\n  const points = crimes.map((crime) => ({\n    type: \"Feature\",\n    properties: {\n      cluster: false,\n      crimeId: crime.id,\n      crimeTitle: crime.title,\n      crimeDate: crime.date,\n      crimeDay: crime.day,\n      crimeTime: crime.time,\n      crimeBeat: crime.beat,\n      crimeZone: crime.zone,\n      crimeLocation: crime.location,\n      crimeIBR: crime.ibr,\n      crimeOsDate: crime.osdate,\n      crimeOsTime: crime.ostime,\n      crimeNeighborhood: crime.neighborhood,\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [\n        parseFloat(crime.location.longitude),\n        parseFloat(crime.location.latitude),\n      ],\n    },\n  }));\n\n  const { clusters, supercluster } = useSupercluster({\n    points,\n    bounds,\n    zoom,\n    options: { radius: 75, maxZoom: 20 },\n  });\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: \"AIzaSyD2zMgWcSv5eO8fjUWF4b_hcbT6DPKc--A\" }}\n        defaultCenter={{ lat: 52.6376, lng: -1.135171 }}\n        defaultZoom={10}\n        yesIWantToUseGoogleMapApiInternals\n        onGoogleApiLoaded={({ map }) => {\n          mapRef.current = map;\n        }}\n        onChange={({ zoom, bounds }) => {\n          setZoom(zoom);\n          setBounds([\n            bounds.nw.lng,\n            bounds.se.lat,\n            bounds.se.lng,\n            bounds.nw.lat,\n          ]);\n        }}>\n        {clusters.map((cluster) => {\n          const [longitude, latitude] = cluster.geometry.coordinates;\n          const { cluster: isCluster, point_count: pointCount } =\n            cluster.properties;\n\n          if (isCluster) {\n            return (\n              <Marker\n                key={`cluster-${cluster.id}`}\n                lat={latitude}\n                lng={longitude}>\n                <div\n                  className=\"cluster-marker\"\n                  style={{\n                    width: `${10 + (pointCount / points.length) * 20}px`,\n                    height: `${10 + (pointCount / points.length) * 20}px`,\n                  }}\n                  onClick={() => {\n                    const expansionZoom = Math.min(\n                      supercluster.getClusterExpansionZoom(cluster.id),\n                      20\n                    );\n                    mapRef.current.setZoom(expansionZoom);\n                    mapRef.current.panTo({ lat: latitude, lng: longitude });\n                  }}>\n                  {pointCount}\n                </div>\n              </Marker>\n            );\n          }\n\n          return (\n            <Marker\n              key={`crime-${cluster.properties.crimeId}`}\n              lat={latitude}\n              lng={longitude}>\n              <button className=\"crime-marker\">\n                <img src=\"/custody.svg\" alt=\"crime doesn't pay\" />\n              </button>\n            </Marker>\n          );\n        })}\n      </GoogleMapReact>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}