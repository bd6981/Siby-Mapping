{"ast":null,"code":"var _jsxFileName = \"/Users/britt/projects/mapping/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport useSwr from \"swr\";\nimport GoogleMapReact from \"google-map-react\";\nimport useSupercluster from \"use-supercluster\";\nimport \"./App.css\";\nimport crimes from \"./data.json\";\nimport { Icon } from \"@iconify/react\";\nimport peopleRobbery from \"@iconify/icons-fa6-solid/people-robbery\";\nimport InfoBox from \"./InfoBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Marker = _ref => {\n  let {\n    children\n  } = _ref;\n  return children;\n};\n_c = Marker;\nexport default function App() {\n  _s();\n  const mapRef = useRef();\n  const [bounds, setBounds] = useState(null);\n  const [zoom, setZoom] = useState(10);\n  const [infoBox, setInfoBox] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [renderEvent, setRenderEvent] = useState([]);\n  const {\n    setEventData,\n    reRenderMarkers\n  } = useMainContext();\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true);\n      const response = await fetch(\"./data.json\");\n      if (response.ok) {\n        const crimes = await response.json();\n      }\n      setEventData(crimes);\n      setRenderEvent(crimes);\n      setLoading(false);\n    };\n    fetchEvents(crimes);\n  }, []);\n  const points = crimes.map(crime => ({\n    type: \"Feature\",\n    properties: {\n      cluster: false,\n      crimeId: crime.id,\n      crimeTitle: crime.title,\n      crimeDate: crime.date,\n      crimeDay: crime.day,\n      crimeTime: crime.time,\n      crimeBeat: crime.beat,\n      crimeZone: crime.zone,\n      crimeLocation: crime.location,\n      crimeIBR: crime.ibr,\n      crimeOsDate: crime.osdate,\n      crimeOsTime: crime.ostime,\n      crimeNeighborhood: crime.neighborhood\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [parseFloat(crime.longitude), parseFloat(crime.latitude)]\n    }\n  }));\n  const {\n    clusters,\n    supercluster\n  } = useSupercluster({\n    points,\n    bounds,\n    zoom,\n    options: {\n      radius: 75,\n      maxZoom: 20\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: \"AIzaSyD2zMgWcSv5eO8fjUWF4b_hcbT6DPKc--A\"\n      },\n      defaultCenter: {\n        lat: 52.6376,\n        lng: -1.135171\n      },\n      defaultZoom: 10,\n      yesIWantToUseGoogleMapApiInternals: true,\n      onGoogleApiLoaded: _ref2 => {\n        let {\n          map\n        } = _ref2;\n        mapRef.current = map;\n      },\n      onChange: _ref3 => {\n        let {\n          zoom,\n          bounds\n        } = _ref3;\n        setZoom(zoom);\n        setBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\n      },\n      onClick: () => {\n        setInfoBox(null);\n      },\n      onDrag: () => {\n        setInfoBox(null);\n      },\n      children: clusters.map(cluster => {\n        const [longitude, latitude] = cluster.geometry.coordinates;\n        const {\n          cluster: isCluster,\n          point_count: pointCount\n        } = cluster.properties;\n        if (isCluster) {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            lat: latitude,\n            lng: longitude,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cluster-marker\",\n              style: {\n                width: `${10 + pointCount / points.length * 20}px`,\n                height: `${10 + pointCount / points.length * 20}px`\n              },\n              onClick: () => {\n                const expansionZoom = Math.min(supercluster.getClusterExpansionZoom(cluster.id), 20);\n                mapRef.current.setZoom(expansionZoom);\n                mapRef.current.panTo({\n                  lat: latitude,\n                  lng: longitude\n                });\n              },\n              children: pointCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, `cluster-${cluster.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          lat: latitude,\n          lng: longitude,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"crime-marker\",\n            onClick: () => {\n              setInfoBox({\n                id: cluster.properties.crimeId,\n                title: cluster.properties.crimeTitle,\n                date: cluster.properties.crimeDate,\n                day: cluster.properties.crimeDay,\n                time: cluster.properties.crimeTime,\n                beat: cluster.properties.crimeBeat,\n                zone: cluster.properties.crimeZone,\n                location: cluster.properties.crimeLocation,\n                ibr: cluster.properties.crimeIBR,\n                osdate: cluster.properties.crimeOsDate,\n                ostime: cluster.properties.crimeOsTime,\n                neighborhood: cluster.properties.crimeNeighborhood\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              icon: peopleRobbery,\n              alt: \"crime isnt good\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, `crime-${cluster.properties.crimeId}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), infoBox && /*#__PURE__*/_jsxDEV(InfoBox, {\n      className: \"infoBox\",\n      info: infoBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/v0NrCDjf7/CYgiALvv2FuutAGI=\", true, function () {\n  return [useSupercluster];\n});\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Marker\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useSwr","GoogleMapReact","useSupercluster","crimes","Icon","peopleRobbery","InfoBox","Marker","children","App","mapRef","bounds","setBounds","zoom","setZoom","infoBox","setInfoBox","loading","setLoading","renderEvent","setRenderEvent","setEventData","reRenderMarkers","useMainContext","fetchEvents","response","fetch","ok","json","points","map","crime","type","properties","cluster","crimeId","id","crimeTitle","title","crimeDate","date","crimeDay","day","crimeTime","time","crimeBeat","beat","crimeZone","zone","crimeLocation","location","crimeIBR","ibr","crimeOsDate","osdate","crimeOsTime","ostime","crimeNeighborhood","neighborhood","geometry","coordinates","parseFloat","longitude","latitude","clusters","supercluster","options","radius","maxZoom","height","width","key","lat","lng","current","nw","se","isCluster","point_count","pointCount","length","expansionZoom","Math","min","getClusterExpansionZoom","panTo"],"sources":["/Users/britt/projects/mapping/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport useSwr from \"swr\";\nimport GoogleMapReact from \"google-map-react\";\nimport useSupercluster from \"use-supercluster\";\nimport \"./App.css\";\nimport crimes from \"./data.json\";\nimport { Icon } from \"@iconify/react\";\nimport peopleRobbery from \"@iconify/icons-fa6-solid/people-robbery\";\nimport InfoBox from \"./InfoBox\";\n\n\n\n\nconst Marker = ({ children }) => children;\n\nexport default function App() {\n  const mapRef = useRef()\n  const [bounds, setBounds] = useState(null);\n  const [zoom, setZoom] = useState(10);\n  const [infoBox, setInfoBox] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [renderEvent, setRenderEvent] = useState([]);\n   const { setEventData, reRenderMarkers } = useMainContext();\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true);\n      const response = await fetch(\"./data.json\");\n      if (response.ok) {\n        const crimes = await response.json();\n      }\n      setEventData(crimes);\n      setRenderEvent(crimes);\n      setLoading(false);\n    };\n\n    fetchEvents(crimes);\n  }, []);\n  const points = crimes.map((crime) => ({\n    type: \"Feature\",\n    properties: {\n      cluster: false,\n      crimeId: crime.id,\n      crimeTitle: crime.title,\n      crimeDate: crime.date,\n      crimeDay: crime.day,\n      crimeTime: crime.time,\n      crimeBeat: crime.beat,\n      crimeZone: crime.zone,\n      crimeLocation: crime.location,\n      crimeIBR: crime.ibr,\n      crimeOsDate: crime.osdate,\n      crimeOsTime: crime.ostime,\n      crimeNeighborhood: crime.neighborhood,\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [parseFloat(crime.longitude), parseFloat(crime.latitude)],\n    },\n  }));\n\n  const { clusters, supercluster } = useSupercluster({\n    points,\n    bounds,\n    zoom,\n    options: { radius: 75, maxZoom: 20 },\n  });\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: \"AIzaSyD2zMgWcSv5eO8fjUWF4b_hcbT6DPKc--A\" }}\n        defaultCenter={{ lat: 52.6376, lng: -1.135171 }}\n        defaultZoom={10}\n        yesIWantToUseGoogleMapApiInternals\n        onGoogleApiLoaded={({ map }) => {\n          mapRef.current = map;\n        }}\n        onChange={({ zoom, bounds }) => {\n          setZoom(zoom);\n          setBounds([\n            bounds.nw.lng,\n            bounds.se.lat,\n            bounds.se.lng,\n            bounds.nw.lat,\n          ]);\n        }}\n        onClick={() => {\n          setInfoBox(null);\n        }}\n        onDrag={() => {\n          setInfoBox(null);\n        }}>\n        {clusters.map((cluster) => {\n          const [longitude, latitude] = cluster.geometry.coordinates;\n          const { cluster: isCluster, point_count: pointCount } =\n            cluster.properties;\n\n          if (isCluster) {\n            return (\n              <Marker\n                key={`cluster-${cluster.id}`}\n                lat={latitude}\n                lng={longitude}>\n                <div\n                  className=\"cluster-marker\"\n                  style={{\n                    width: `${10 + (pointCount / points.length) * 20}px`,\n                    height: `${10 + (pointCount / points.length) * 20}px`,\n                  }}\n                  onClick={() => {\n                    const expansionZoom = Math.min(\n                      supercluster.getClusterExpansionZoom(cluster.id),\n                      20\n                    );\n                    mapRef.current.setZoom(expansionZoom);\n                    mapRef.current.panTo({ lat: latitude, lng: longitude });\n                  }}>\n                  {pointCount}\n                </div>\n              </Marker>\n            );\n          }\n\n          return (\n            <Marker\n              key={`crime-${cluster.properties.crimeId}`}\n              lat={latitude}\n              lng={longitude}>\n              <button\n                className=\"crime-marker\"\n                onClick={() => {\n                  setInfoBox({\n                    id: cluster.properties.crimeId,\n                    title: cluster.properties.crimeTitle,\n                    date: cluster.properties.crimeDate,\n                    day: cluster.properties.crimeDay,\n                    time: cluster.properties.crimeTime,\n                    beat: cluster.properties.crimeBeat,\n                    zone: cluster.properties.crimeZone,\n                    location: cluster.properties.crimeLocation,\n                    ibr: cluster.properties.crimeIBR,\n                    osdate: cluster.properties.crimeOsDate,\n                    ostime: cluster.properties.crimeOsTime,\n                    neighborhood: cluster.properties.crimeNeighborhood,\n                  });\n                }}>\n                <Icon icon={peopleRobbery} alt=\"crime isnt good\"></Icon>\n              </button>\n            </Marker>\n          );\n        })}\n      </GoogleMapReact>\n      {infoBox && <InfoBox className=\"infoBox\" info={infoBox}></InfoBox>}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}